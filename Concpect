## Инструкция по работе с гит

### Начало работы

* *git init* - создание репозитория в текущей папке

* *git add* - добавление (изменяемого) файла в репозиторий 

* *git commit* - добавление изменений к файлу

* *git log* - проверка внесённых изменений

### Создание веток

* *git branch branch_name* - создаёт новую ветку с именем branch_name

* *git checkout branch_name* - переход на новую ветку

### Слияние веток

* *git merge branch_name* - сливает с текущей веткой ветку branch_name

### Конфликт веток

1. Конфликт не возникает, если разные ветки содержат изменения в разных строках.

2. Конфликт веток возникает, если одна и та же строка в двух ветках содержит разную информацию.

### Разрешение конфликта

1. Технология *fast forward*. Если конфликта нет, добавление из сливаемой ветки в текущую

2. Технология *ort*. Если изменения произошли в разных строках, они объединяются автоматически.

3. Если конфликт есть, система предлагает разрешить его вручную

### Работа с удалённым репозиторием

* *git push* - пересылает содержимое локального репозитория в удалённый

* *git pull* - копирует содержимое удалённого репозитория в локальный

* *git clone* - копирует удалённый репозиторий полностью в локальный

* *fork* - полностью копирует удалённый репозиторий другого владельца в собственный аккаунт 

* *git diff* - показывает разницу между файлами

* *git reset* - убирает из индекса все добавленные в него изменения (в рабочей директории все изменения сохранятся), антипод git add

* *git revert* - отменяет изменения коммитами, отправленными в удалённый репозиторий

* *pull request* - запрос удалённому репозиторию на слияние пересылаемой информации с содержимым этого репозитория

